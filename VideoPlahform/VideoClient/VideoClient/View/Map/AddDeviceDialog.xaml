<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Name="window" x:Class="VideoClient.View.Map.AddDeviceDialog"
        Title="添加设备" Height="200" Width="426" AllowsTransparency="True" WindowStyle="None" OpacityMask="White" Background="Transparent" WindowStartupLocation="Manual" ResizeMode="NoResize">
        <Window.Resources>
        <Storyboard x:Key="OnMouseEnter1"/>
        <Storyboard x:Key="OnLoaded1"/>
        <Storyboard x:Key="OnMouseEnter2"/>
        <Storyboard x:Key="OnClick1"/>
        <ControlTemplate x:Key="ButtonControlLen" TargetType="{x:Type Button}">
        	<Grid x:Name="grid" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Opacity="1">
        		<VisualStateManager.VisualStateGroups>
        			<VisualStateGroup x:Name="CommonStates">
        				<VisualState x:Name="Normal">
        					<Storyboard>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="label">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="label">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="image">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="image">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Viewbox.Stretch)" Storyboard.TargetName="image">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Stretch.Uniform}"/>
        						</ObjectAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="MouseOver">
        					<Storyboard>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="image">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="image">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.VerticalContentAlignment)" Storyboard.TargetName="label">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.HorizontalContentAlignment)" Storyboard.TargetName="label">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="label">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="label">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1">
        							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        						</DoubleAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="image1">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="image1">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Pressed">
        					<Storyboard>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="image">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="image">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.VerticalContentAlignment)" Storyboard.TargetName="label">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.HorizontalContentAlignment)" Storyboard.TargetName="label">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="label">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="label">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image2">
        							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        						</DoubleAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="image2">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="image2">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
        						</ObjectAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Disabled"/>
        			</VisualStateGroup>
        		</VisualStateManager.VisualStateGroups>
        		<Image x:Name="image" HorizontalAlignment="Left" Height="{Binding ActualHeight, ElementName=grid}" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=grid}" Source="/VideoClient;component/Skin/img/button/长按钮_普通.png"/>
        		<Image x:Name="image1" HorizontalAlignment="Left" Height="{Binding ActualHeight, ElementName=grid}" Opacity="0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=grid}" Source="/VideoClient;component/Skin/img/button/长按钮_选择.png"/>
        		<Image x:Name="image2" HorizontalAlignment="Left" Height="{Binding ActualHeight, ElementName=grid}" Opacity="0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=grid}" Source="/VideoClient;component/Skin/img/button/长按钮_点击.png"/>
        		<Label x:Name="label" HorizontalAlignment="Left" VerticalAlignment="Top" Content="浏 览"/>
        	</Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonControlTemplate4" TargetType="{x:Type Button}">
        	<Grid>
        		<VisualStateManager.VisualStateGroups>
        			<VisualStateGroup x:Name="CommonStates">
        				<VisualState x:Name="Normal">
        					<Storyboard>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="X">
        							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        						</DoubleAnimationUsingKeyFrames>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="X">
        							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        						</DoubleAnimationUsingKeyFrames>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="X">
        							<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
        						</DoubleAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontFamily)" Storyboard.TargetName="X">
        							<DiscreteObjectKeyFrame KeyTime="0">
        								<DiscreteObjectKeyFrame.Value>
        									<FontFamily>Gisha</FontFamily>
        								</DiscreteObjectKeyFrame.Value>
        							</DiscreteObjectKeyFrame>
        						</ObjectAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="MouseOver">
        					<Storyboard>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="X">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF2760A8"/>
        						</ColorAnimationUsingKeyFrames>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="X">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF020E1D"/>
        						</ColorAnimationUsingKeyFrames>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="X">
        							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        						</DoubleAnimationUsingKeyFrames>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="X">
        							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        						</DoubleAnimationUsingKeyFrames>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="X">
        							<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
        						</DoubleAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontFamily)" Storyboard.TargetName="X">
        							<DiscreteObjectKeyFrame KeyTime="0">
        								<DiscreteObjectKeyFrame.Value>
        									<FontFamily>Gisha</FontFamily>
        								</DiscreteObjectKeyFrame.Value>
        							</DiscreteObjectKeyFrame>
        						</ObjectAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Pressed">
        					<Storyboard>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="X">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF09274D"/>
        						</ColorAnimationUsingKeyFrames>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="X">
        							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        						</DoubleAnimationUsingKeyFrames>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="X">
        							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        						</DoubleAnimationUsingKeyFrames>
        						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="X">
        							<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
        						</DoubleAnimationUsingKeyFrames>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontFamily)" Storyboard.TargetName="X">
        							<DiscreteObjectKeyFrame KeyTime="0">
        								<DiscreteObjectKeyFrame.Value>
        									<FontFamily>Gisha</FontFamily>
        								</DiscreteObjectKeyFrame.Value>
        							</DiscreteObjectKeyFrame>
        						</ObjectAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Disabled">
        					<Storyboard>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontFamily)" Storyboard.TargetName="X">
        							<DiscreteObjectKeyFrame KeyTime="0">
        								<DiscreteObjectKeyFrame.Value>
        									<FontFamily>Gisha</FontFamily>
        								</DiscreteObjectKeyFrame.Value>
        							</DiscreteObjectKeyFrame>
        						</ObjectAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        			</VisualStateGroup>
        		</VisualStateManager.VisualStateGroups>
        		<Label x:Name="X" Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Height="27.5" Margin="-1.834,-2.5,-3.166,-5" Width="25" FontFamily="/VideoClient;component/Fonts/#Aharoni" Foreground="#FF144685">
        			<Label.Effect>
        				<DropShadowEffect BlurRadius="3" ShadowDepth="4" Color="#FF05162B"/>
        			</Label.Effect>
        		</Label>
        	</Grid>
        </ControlTemplate>
        	
        	<Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        		<Setter Property="OverridesDefaultStyle" Value="True"/>
        		<Setter Property="IsTabStop" Value="False"/>
        		<Setter Property="Focusable" Value="False"/>
        		<Setter Property="ClickMode" Value="Press"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="10">
        						<Border.Background>
        							<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        								<GradientStop Color="#FFF0F0F0" Offset="0"/>
        								<GradientStop Color="#FFE5E5E5" Offset="1"/>
        							</LinearGradientBrush>
        						</Border.Background>
        						<Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
        							<Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
        						</Border>
        					</Border>
        					<ControlTemplate.Triggers>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
        								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="templateRoot" Value="White"/>
        							<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
        							<Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
        							<Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
        						</MultiDataTrigger>
        						<Trigger Property="IsMouseOver" Value="True">
        							<Setter Property="Fill" TargetName="Arrow" Value="Black"/>
        						</Trigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="templateRoot">
        								<Setter.Value>
        									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        										<GradientStop Color="#FFECF4FC" Offset="0"/>
        										<GradientStop Color="#FFDCECFC" Offset="1"/>
        									</LinearGradientBrush>
        								</Setter.Value>
        							</Setter>
        							<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="templateRoot" Value="White"/>
        							<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
        							<Setter Property="Background" TargetName="splitBorder">
        								<Setter.Value>
        									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        										<GradientStop Color="#FFEBF4FC" Offset="0"/>
        										<GradientStop Color="#FFDCECFC" Offset="1"/>
        									</LinearGradientBrush>
        								</Setter.Value>
        							</Setter>
        							<Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
        						</MultiDataTrigger>
        						<Trigger Property="IsPressed" Value="True">
        							<Setter Property="Fill" TargetName="Arrow" Value="Black"/>
        						</Trigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="templateRoot">
        								<Setter.Value>
        									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        										<GradientStop Color="#FFDAECFC" Offset="0"/>
        										<GradientStop Color="#FFC4E0FC" Offset="1"/>
        									</LinearGradientBrush>
        								</Setter.Value>
        							</Setter>
        							<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="templateRoot" Value="White"/>
        							<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
        							<Setter Property="Background" TargetName="splitBorder">
        								<Setter.Value>
        									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        										<GradientStop Color="#FFDAEBFC" Offset="0"/>
        										<GradientStop Color="#FFC4E0FC" Offset="1"/>
        									</LinearGradientBrush>
        								</Setter.Value>
        							</Setter>
        							<Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
        						</MultiDataTrigger>
        						<Trigger Property="IsEnabled" Value="False">
        							<Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
        						</Trigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
        							<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="templateRoot" Value="White"/>
        							<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
        							<Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
        							<Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
        						</MultiDataTrigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>

        <DropShadowEffect x:Key="buttonEffect" BlurRadius="2" ShadowDepth="2" Color="#FF5C8DBF" Opacity="0.5"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="90" />
            <Setter Property="Height" Value="27" />
            
        </Style>
    </Window.Resources>
	<Grid x:Name="addDeviceDialogGrid" DataContext="{DynamicResource mapViewModel}" Width="{Binding ActualWidth, ElementName=window}" Height="{Binding ActualHeight, ElementName=window}">
		<Grid.Effect>
			<DropShadowEffect BlurRadius="1" ShadowDepth="1" Opacity="0.5" Color="#FF386A9E"/>
		</Grid.Effect>
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition />
			<RowDefinition />
			<RowDefinition />
		</Grid.RowDefinitions>

		<Image HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Source="/VideoClient;component/Skin/img/dialog_title_bg.png" Stretch="Fill" MouseLeftButtonDown="Image_MouseLeftButtonDown" Margin="0,0,-84,0" Width="{Binding ActualWidth, ElementName=addDeviceDialogGrid}"/>
		<Image HorizontalAlignment="Left" Height="150" Grid.RowSpan="4" VerticalAlignment="Top" Source="/VideoClient;component/Skin/img/dialog_content_bg.png" Stretch="Fill" Margin="0,50,-84,0" Width="{Binding ActualWidth, ElementName=addDeviceDialogGrid}"/>
		<TextBlock Text="添加设备" Grid.Row="0" Style="{StaticResource dialogTitle}" Margin="18,9.52,286,10" Foreground="White" FontSize="21.333"/>
		<Button x:Name="min" Content="-" HorizontalAlignment="Left" VerticalAlignment="Top" Width="23" Margin="364,7,0,0" FontFamily="/VideoClient;component/Fonts/#Candara" BorderBrush="{x:Null}" Background="{x:Null}" FontWeight="Bold" FontSize="18.667" TextOptions.TextFormattingMode="Display" TextOptions.TextHintingMode="Fixed" Foreground="#FF144685" Template="{DynamicResource ButtonControlTemplate5}" Height="28" Click="min_Click"/>	
		<Button x:Name="X" Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" Width="23" Margin="392,10,0,0" FontFamily="/VideoClient;component/Fonts/#Candara" BorderBrush="{x:Null}" Background="{x:Null}" FontWeight="Bold" FontSize="18.667" TextOptions.TextFormattingMode="Display" TextOptions.TextHintingMode="Fixed" Foreground="#FF144685" Template="{DynamicResource ButtonControlTemplateClose}" Height="28" Click="X_Click"/>
		<TextBlock Text="选择区域:" Style="{StaticResource dialogTextBlock}" Margin="39,14.88,233,9.88" Width="Auto" Grid.Row="1" Height="25.24" FontSize="18.667" />
		<ComboBox x:Name="regionComboBox" SelectionChanged="regionComboBox_SelectionChanged" Style="{StaticResource dialogComboBox}" Height="Auto" Margin="150,14.88,55,10" Width="Auto" Grid.Row="1" Template="{DynamicResource ComboBoxControlTemplate1}" />
		<TextBlock Text="选择设备:" Style="{StaticResource dialogTextBlock}" Margin="39,14.88,233,10" Width="Auto" Grid.Row="2" Height="25.12" FontSize="18.667" />
		<ComboBox x:Name="deviceComboBox" Style="{StaticResource dialogComboBox}" Height="Auto" Margin="150,14.88,55,10" Width="Auto" Grid.Row="2" Template="{DynamicResource ComboBoxControlTemplate1}" />
		<Button Content="确定" Margin="39,13,297,10" Command="{Binding addDeviceCommond, Mode=OneWay}" CommandParameter="{Binding ElementName=window, Mode=OneWay}" Grid.Row="3" Style="{DynamicResource ButtonStyle1}" Template="{DynamicResource ButtonControlTemplate2}"/>
		<Button Content="取消" Margin="281,13,55,10" IsCancel="True" Grid.Row="3" Style="{DynamicResource ButtonStyle1}" Template="{DynamicResource ButtonControlTemplate3}"/>
	</Grid>
</Window>
